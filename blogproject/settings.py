"""
Django settings for blogproject project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""
import dj_database_url
from pathlib import Path
import os
# from dotenv import load_dotenv

# load_dotenv()

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = os.getenv('DJANGO_EMAIL_HOST')
# EMAIL_PORT = int(os.getenv('DJANGO_EMAIL_PORT', 587))
# EMAIL_USE_TLS = os.getenv('DJANGO_EMAIL_USE_TLS', 'True')
# if EMAIL_USE_TLS.lower() == 'true':
#     EMAIL_USE_TLS = True
# else:
#     EMAIL_USE_TLS = False
# EMAIL_HOST_USER = str(os.getenv('DJANGO_EMAIL_HOST_USER'))
# EMAIL_HOST_PASSWORD = str(os.getenv('DJANGO_EMAIL_HOST_PASSWORD'))


# Build paths inside the project like this: BASE_DIR / 'subdir'.
# BASE_DIR = Path(__file__).resolve().parent.parent
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-&gy^c3fwu(wy_kuy_(vdkb0jl*#4525=fe38rfisj()a_m3e4*'
# SECRET_KEY=os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =os.environ.get("DEBUG","False").lower() == "true"

# ALLOWED_HOSTS = ['.vercel.app','now.sh','127.0.0.1','localhost']
ALLOWED_HOSTS = ['*'] # or use specific host name
# ALLOWED_HOSTS=os.environ.get("ALLOWED_HOSTS").split(" ,")



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #  my apps
    'crispy_forms',
    'crispy_bootstrap4',
    'blog.apps.BlogConfig',
    'users.apps.UsersConfig',
    'ckeditor',
    # 'Comment',


]
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'blogproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates'] ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'blogproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES= {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        # 'NAME': BASE_DIR /'db.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

import os
import dj_database_url
DATABASES["default"] = dj_database_url.config(default=os.environ.get('DATABASE_URL', 'sqlite://localhost/db.sqlite3'))


# database_url=os.environ.get("DATABASE_URL")
# DATABASES['defalut']= dj_database_url.parse("database_url")
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'railway',
#         'USER': 'postgres',
#         'PASSWORD': '4651eg4AEDE6G26gD15DbfcGC1G*cCba',
#         'HOST': 'monorail.proxy.rlwy.net',
#         'PORT': '47364',
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

CRISPY_TEMPLATE_PACK = 'bootstrap4'
# CRISPY_TEMPLATE_PACK = 'bootstrap5'

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGIN_REDIRECT_URL = 'blog-home'
LOGIN_URL = 'login'

MEDIA_URL='/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

#  sending  email for  resttting  password 

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_FILE_PATH = BASE_DIR / "emails"
EMAIL_FILE_PATH=os.path.join(BASE_DIR, "emails"),
# EMAIL_HOST = 'smtp.gmail.com' 
# EMAIL_HOST_USER = 'jeaniyonzima2016@gmail.com'
# EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_PASSWORD')
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # Add other paths to your static files directories if needed
]
# STATICFILES_DIRS = os.path.join(BASE_DIR, 'static'),
# STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_build', 'static')
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
